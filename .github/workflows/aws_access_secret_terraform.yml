name: "learn-aws-wordpress-ec2-destroy"

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_POC }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_POC }}
  AWS_DEFAULT_REGION: "us-east-1"

on:
  workflow_dispatch:
    
jobs:
  destroy:
    name: "Destroy AWS Infrastructure"
    runs-on: ubuntu-latest
    permissions:
      contents: write    
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          
      - name: Initialize, validate, format Terraform
        run: |
          ls -lah
          pwd
          ls -lah state
          mv state/terraform.tfstate ./terraform.tfstate
          ls -lah
          echo "Terraform init"
          echo ""
          terraform init
          terraform validate
          terraform fmt
      
      - name: Terraform Plan
        run: terraform plan

      - name: Terraform State
        run: terraform state list
      
      - name: Terraform Destroy Targeted Resources
        run: |
          terraform destroy -var-file="terraform.tfvars.json" -auto-approve -input=false
          if [ -n "$(aws iam list-roles --query 'Roles[*].RoleName' | grep AmazonSSMManagedInstanceRole | sed 's/[",]//g')" ]; then
            aws iam delete-role --role-name "$(aws iam list-roles --query 'Roles[*].RoleName' | grep AmazonSSMManagedInstanceRole | sed 's/[",]//g')"
          fi
          if [ -n "$(aws iam list-instance-profiles --query InstanceProfiles[*].InstanceProfileName | grep AmazonSSMManagedInstanceProfile | sed 's/[",]//g')" ]; then
            aws iam delete-instance-profile --instance-profile-name "$(aws iam list-instance-profiles --query InstanceProfiles[*].InstanceProfileName | grep AmazonSSMManagedInstanceProfile | sed 's/[",]//g')"
          fi          

      - name: Clean tfstate and Git
        run: |
          echo "" > state/terraform.tfstate
          mv terraform.tfstate state                    
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/davidawcloudsecurity/learn-terraform-aws-wordpress-ec2.git                   
          git fetch origin destroy/main
          git checkout destroy/main
          git merge origin/destroy/main
          # Get the latest commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)
          git add state
          git commit -m "clean-${COMMIT_HASH}"    
          git push -u origin          
          pwd
          ls -lah
          cd ..
          rm -rf learn-terraform-aws-wordpress-ec2
          pwd
          ls -lah
          cd ..
          ls -lah
          rm -rf learn-terraform-aws-wordpress-ec2
          ls -lah
